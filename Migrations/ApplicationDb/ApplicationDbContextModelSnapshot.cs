// <auto-generated />
using System;
using Disney.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Disney.Migrations.ApplicationDb
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Disney.Models.Character", b =>
                {
                    b.Property<int>("IdPersonaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPelicula")
                        .HasColumnType("int");

                    b.Property<string>("ImagenPersonaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombrePersonaje")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.HasKey("IdPersonaje");

                    b.HasIndex("IdPelicula");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("Disney.Models.Genre", b =>
                {
                    b.Property<int>("IdGenero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImagenGenero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreGenero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGenero");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Disney.Models.MovieOrSerie", b =>
                {
                    b.Property<int>("IdPelicula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGenero")
                        .HasColumnType("int");

                    b.Property<string>("ImagenPelicula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TituloPelicula")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPelicula");

                    b.HasIndex("IdGenero");

                    b.ToTable("MovieOrSeries");
                });

            modelBuilder.Entity("Disney.Models.Character", b =>
                {
                    b.HasOne("Disney.Models.MovieOrSerie", "MovieOrSerie")
                        .WithMany()
                        .HasForeignKey("IdPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MovieOrSerie");
                });

            modelBuilder.Entity("Disney.Models.MovieOrSerie", b =>
                {
                    b.HasOne("Disney.Models.Genre", "genre")
                        .WithMany()
                        .HasForeignKey("IdGenero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genre");
                });
#pragma warning restore 612, 618
        }
    }
}
